
上課進度:
varible
    - 介紹變數

ifstatement
    - 輸入輸出 對話框 (a01_LAB)
    - a++ ++a 觀念 (a02_Lab)
    - 萬年曆 (a03_switch)

forstatement
    - 九九乘法表 a02_Lab

arraystatement
    - 陣列
   D- 洗牌程式

ObjectOriented
    - class & instance & 物件實體 簡介 (a01)
    - Constructor 宣告法 (a02)
    - 視窗嘗鮮 之後會講更多 看看就好 (a04)
    - 重要概念 : class 繼承與 Constructor 關係與運用 (a03)
    - 重要概念 : initialization block (a05) -- 這邊可能要先看完 abstractStatement 才會懂

abstractStatement
    - 介紹 abstract class 與 extends(繼承)概念
    - 介紹 static(class level) & non-static(instance level)
    - 介紹 interface 與 implements 概念
   D- 文字編輯器 (透過 interface 讓物件互相交互作用  PS. 還有功能要做 捲軸)

stringStatement
[ java.lang/string ]
    - string 類別介紹 (建議多看API)
    - equals & toString 介紹 (Override)
    - 身分證字號產生器 (重要 a03_AppicationID ＆ a03_exe)
      類別內 Constructor 撰寫方式
    - 猜數字 (charAt & indexOf)

exceptionStatement
[ Exceptions ]
    - 重要概念:exception (多看API)

IO_directory
[ java.io ]
    - 資料夾的路徑 增刪修查

IO_context
    - 資料串流
    - 用 FileInputStream 讀取檔案
    - 用 FileReader 讀取文字檔案
    - 用 FileOutputStream 寫檔案
    - 用 BufferedReader 比較優雅的讀取檔案


netStaStatement
    -

phpInteraction
    -

DataStructure_List&Set
    -


threadStatement
    - 特別注意 Thread 時間精準度不高

timerStatement
    - 時間 Timer 在掌握 事情 TimerTask 再處理


 * ========================================================
 * HomeWork
 * 1. PHP JS 的 變數命名法則
 *      PHP : ^$[A-Za-z_]+[A-Za-z0-9_]*
 *      JS  :
 * 2. 1~100 找質數 (可以用PHP寫)
 * 3. Shuffle
 * 4. 萬年曆 1752/09
 * 5. 手機號碼 正規表示
 *    用 java 驗證 IPv4
 * 6. 身分證完成
 *
 * 7.
 * 8. TCP 傳送
 *
 * 9. 賽柴柴
 * 10. 電子手表 (時鐘型的 + 碼錶)
 *
 * ======================================================
 *
 *
 * println() --> 換行
 * println() --> 不換行
 *
 * 字串裡面 \t --> tab鍵
 *
 * ==================================================
 * API 裡面的東西
 * 重要
 * java.net 網路
 * java.io  檔案
 * java.sql 資料庫
 * java.text
 * java.util 工具
 * java.lang
 *
 * 視窗 (看看就好)
 * java.awt  --> javax.swing
 *
 * 小注意:
 * Deprecated : 目前可以使用 可是以後版本可能不支援
 *
 * 因為字串只要變動 就會生成新的物件
 * 所以如果字串一直有在更新 不要用 String 要用以下兩個
 * java.lang
 *  - StringBuffer (重安全/穩定性)
 *  - StringBuilder (重效率)
 *
 *
 * Serialization (序列化)
 * 對戰遊戲 可以將人物的物件實體 丟給對方
 * java.io
 *  - DataInputStream
 *  - DataOutputStream
 *  - ObjectInputStream
 *  - ObjectOutputStream
 *
 *
 * java.net
 *
 *
 *
 * 無抽象類別的抽象方法 => 用在多型
 *
 *
 * https://www.unrealengine.com/what-is-unreal-engine-4
 * https://libgdx.badlogicgames.com/
 * http://www.cocos2d-x.org/
 * https://unity3d.com/cn/
 *